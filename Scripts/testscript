proc mainx () {
    /*call ahnen("i1")*/
    call testextracttokens()
}

proc main() {
    list(alist)
    set(alist, alist)
    set(alist, alist)
}

proc testextracttokens() {
    set(s, "This is a string representing a sentence in English")
    list(l)
    extracttokens(s, l, n, " ")
    print("n is ", d(n), nl())
}

proc f(p) { p nl nl() }

func g(p) { p nl return("bbbb") }

proc ahnen (key) {
    "ahnen called with " key "\n"
    set(indi, indi(key))
    list(ilist)
    list(alist)
    enqueue(ilist, indi)
    enqueue(alist, 1)
    showstack()
    while(indi, dequeue(ilist)) {
        set(ahnen, dequeue(alist))
        d(ahnen) ". " name(indi) " (" key(indi) ")\n"
        if (e, birth(indi)) { " b. " long(e) nl() }
        if (e, death(indi)) { " d. " long(e) nl() }
        if (par, father(indi)) {
            enqueue(ilist, par)
            enqueue(alist, mul(2,ahnen))
        }
        if (par,mother(indi)) {
            enqueue(ilist, par)
            enqueue(alist, add(1,mul(2,ahnen)))
        }
    }
}
